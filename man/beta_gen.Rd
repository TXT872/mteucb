% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/beta_gen.R
\name{beta_gen}
\alias{beta_gen}
\title{Coeffeicients of Parametric Part of Marginal Treatment Effect (MTE) Function .}
\usage{
beta_gen(
  outcome_name = outcome_name,
  covariate_name = covariate_name,
  instrument_name = instrument_name,
  treatment_name = treatment_name,
  data = data,
  family = "probit",
  trim = 0.01,
  intercept = TRUE,
  se_type = "HC2"
)
}
\arguments{
\item{outcome_name}{The name of the outcome}

\item{covariate_name}{The name of covariates}

\item{instrument_name}{The name of instrument variables}

\item{treatment_name}{The name of a treatment variable}

\item{data}{data.frame to be used for the estimation of MTE.}

\item{family}{The distribution used for the calculation of the propensity score.
You can choose "probit" or "logit". The default choice is "probit".}

\item{trim, }{To mitigate the effect of ill behavior of estimated propensity scores,
we set values below the trim level to the trim level and values above (1 - trim) level to (1 - trim) level, respectively. The default choice is “0.01”.}

\item{intercept}{'TRUE' or 'FLASE' option to decide whether you include an intercept
for estimating the propensity score or not. The default choice is 'TRUE'.}

\item{se_type}{The sort of standard error sought.
The options are "HC0", "HC1" (or "stata", the equivalent) , "HC2" (default), "HC3", or "classical".}
}
\value{
A list that contains the following elements:
\item{Beta}{The estimated values of the parametric part of MTE}
\item{SE}{A standard error of each coeffecient of parametric parts of MTE}
}
\description{
\code{bet_gen} estimates the parametric part of a MTE function by the partially linear estimation.
}
\examples{
\dontrun{
set.seed(1)
library(MASS)
SS<-2000
X1<-rnorm(n=SS,mean=0,sd=1)
X2<-rnorm(n=SS,mean=0,sd=1)
X3<-rnorm(n=SS,mean=0,sd=1)
X4<-rnorm(n=SS,mean=0,sd=1)
Z1<-rnorm(n=SS,mean=0,sd=1)
Z2<-rnorm(n=SS,mean=0,sd=1)
Z3<-rnorm(n=SS,mean=0,sd=1)
Z4<-rnorm(n=SS,mean=0,sd=1)
E0<-c(1,0.5,0.3)
E1<-c(0.5,1,0.8)
E2<-c(0.3,0.8,1)
E<-cbind(E0,E1,E2)
E4<-mvrnorm(n=SS,mu=c(0,0,0),Sigma=E)
U0<-E4[,1]
U1<-E4[,2]
V<-E4[,3]
Expl<-cbind(X1,X2,X3,X4)
Instr<-cbind(X1,X2,X3,X4,Z1,Z2,Z3,Z4)
PInstr<-cbind(Z1,Z2,Z3,Z4)
beta0<-c(0.5,0.1,-0.1,-0.5)
beta1<-c(0.8,0.4,-0.4,-0.8)
ganma0<-c(0.4,0.4,0.4,0.4,0.3,0.3,0.3,0.3)
D<-numeric(SS)
for(i in 1:SS){
  if ((ganma0 \%*\% (Instr[i,]))>V[i]){
    D[i]=1}
}
Y<-numeric(SS)
for(i in 1:SS){
  Y[i]<-D[i]*((beta1\%*\%Expl[i,])+U1[i])+(1-D[i])*((beta0\%*\%Expl[i,])+U0[i])
}
demo=as.data.frame(cbind(Y,Expl,PInstr,D))


RESULT_Beta<-beta_gen(outcome_name="Y",
                      covariate_name=c("X1","X2","X3","X4"),
                      instrument_name=c("Z1","Z2","Z3","Z4"),
                      treatment_name= "D",
                      data=demo,
                      family="probit",
                      trim=0.01,
                      intercept=TRUE,
                      se_type="HC2"
)
}



}
\references{
Tsuda, Jin and Okui (2024+).
Uniform Confidence Band for Marginal Treatment Effect Function.
will be available on arXiv
}
