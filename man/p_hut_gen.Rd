% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/p_hut_gen.R
\name{p_hut_gen}
\alias{p_hut_gen}
\title{Propensity Score Generation}
\usage{
p_hut_gen(
  outcome_name = outcome_name,
  covariate_name = covariate_name,
  instrument_name = instrument_name,
  treatment_name = treatment_name,
  data = data,
  family = "probit",
  trim = 0.01,
  intercept = TRUE
)
}
\arguments{
\item{outcome_name}{The name of the outcome}

\item{covariate_name}{The name of covariate}

\item{instrument_name}{The name of instrument variables}

\item{treatment_name}{The name of a treatment variable}

\item{data}{data.frame to be used for the estimation of MTE}

\item{family}{The distribution used for the calculation of the propensity score.
You can choose "probit" or "logit". The default choice is "probit".}

\item{trim, }{To mitigate the effect of ill behavior of estimtaed propensity scores,
we set those less than the value of trim or larger than (1-the value of trim) as the value of the value of trim  or (1-the value of trim).}

\item{intercept}{'TRUE' or 'FLASE' option to decide whether you include an intercept
for estimating the propensity score or not. The default choice is 'TRUE'.}
}
\value{
A list that contains the following elements:
\item{Data}{A data frame that contains the following elements: \cr outcome, covariate, instrument variables, treatment and propensity score}
\item{Sample Size}{Sample Size after the trimming}
\item{P_hut}{The estimated propensity scores}
}
\description{
\code{p_hut_gen} generates the estimated propensity scores
}
\examples{
\dontrun{
set.seed(1)
library(MASS)
SS<-2000
X1<-rnorm(n=SS,mean=0,sd=1)
X2<-rnorm(n=SS,mean=0,sd=1)
X3<-rnorm(n=SS,mean=0,sd=1)
X4<-rnorm(n=SS,mean=0,sd=1)
Z1<-rnorm(n=SS,mean=0,sd=1)
Z2<-rnorm(n=SS,mean=0,sd=1)
Z3<-rnorm(n=SS,mean=0,sd=1)
Z4<-rnorm(n=SS,mean=0,sd=1)
E0<-c(1,0.5,0.3)
E1<-c(0.5,1,0.8)
E2<-c(0.3,0.8,1)
E<-cbind(E0,E1,E2)
E4<-mvrnorm(n=SS,mu=c(0,0,0),Sigma=E)
U0<-E4[,1]
U1<-E4[,2]
V<-E4[,3]
Expl<-cbind(X1,X2,X3,X4)
Instr<-cbind(X1,X2,X3,X4,Z1,Z2,Z3,Z4)
PInstr<-cbind(Z1,Z2,Z3,Z4)
beta0<-c(0.5,0.1,-0.1,-0.5)
beta1<-c(0.8,0.4,-0.4,-0.8)
ganma0<-c(0.4,0.4,0.4,0.4,0.3,0.3,0.3,0.3)
D<-numeric(SS)
for(i in 1:SS){
  if ((ganma0 \%*\% (Instr[i,]))>V[i]){
    D[i]=1}
}
Y<-numeric(SS)
for(i in 1:SS){
  Y[i]<-D[i]*((beta1\%*\%Expl[i,])+U1[i])+(1-D[i])*((beta0\%*\%Expl[i,])+U0[i])
}
demo=as.data.frame(cbind(Y,Expl,PInstr,D))

RESULT_P_hut<-p_hut_gen(outcome_name="Y",
                                 covariate_name=c("X1","X2","X3","X4"),
                                 instrument_name=c("Z1","Z2","Z3","Z4"),
                                 treatment_name= "D",
                                 data=demo,
                                 family="probit",
                                 trim=0.01,
                                 intercept=TRUE
                                )
}




}
